<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Convertisseurs</title>
	<style>
		* {box-sizing: border-box;}
        body {
            font: 1em Verdana, sans-serif;
            background-color: #c5daf5;
            padding: 15px;
        }
        .convertisseur label {display: block;}
	
		input[type="text"] {
            border: 1px solid #4caee2;
            border-radius: 10px;
            padding: 9px 12px;
            font: 1em Verdana, sans-serif;
			outline: none;
            margin-top: 8px;
		}

        input:-ms-input-placeholder { /* Internet Explorer 10-11 */
            font: .9em sans-serif;
            color: #ddd9d9;
        }
        input::-ms-input-placeholder { /* Microsoft Edge */
            font: .9em sans-serif;
            color: #ddd9d9;
        }
        input::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
            font: .9em sans-serif;
            color: #ddd9d9;
            opacity: 1; /* Firefox */
        }
    </style>
</head>
<body>

    <h1>Convertisseurs</h1>

    <div class="convertisseur">

        <label for="id_feet">Pied : <input type="text" id="id_feet"></label>

        <label for="id_meter">Mètre : <input type="text" id="id_meter"></label>

        <label for="id_inche">Pouce : <input type="text" id="id_inche"></label>

        <label for="id_cm">Cm : <input type="text" id="id_cm"></label>

        <label for="id_yard">Yard : <input type="text" id="id_yard"></label>

        <label for="id_km">Kilomètre : <input type="text" id="id_km"></label>

        <label for="id_mile">Mile : <input type="text" id="id_mile"></label>
    
    </div>


    <script>

        let i;
        const convertInput = document.querySelectorAll(".convertisseur input");

        function multiconvert(source, valeur) { /* On utilise ces 2 paramètres dans notre fonction utilisateur */

            if (isNaN(valeur)) {
                return false; // Evite le message NaN si on écrit n'importe quoi
            }

            // valeur = parseFloat(valeur); // parseFloat() permet de transformer une chaîne de caractères en un nombre flottant après avoir analysée celle-ci

            var id_feet = document.getElementById("id_feet");
            var id_meter = document.getElementById("id_meter");
            var id_inche = document.getElementById("id_inche");
            var id_cm = document.getElementById("id_cm");
            var id_yard = document.getElementById("id_yard");
            var id_km = document.getElementById("id_km");
            var id_mile = document.getElementById("id_mile");

            if (source === "id_feet") {
                id_feet.value = valeur;
                id_meter.value = (valeur/3.2808).toFixed(2); // toFixed() arrondit. Ici arrondit à 2 chiffres après la virgule
                id_inche.value = (valeur*12).toFixed(2);
                id_cm.value = (valeur/0.032808).toFixed();
                id_yard.value = (valeur*0.33333).toFixed(2);
                id_km.value = (valeur/3280.8).toFixed(5);
                id_mile.value = (valeur*0.00018939).toFixed(5);
            }

            if (source === "id_meter") {
                id_feet.value = (valeur*3.2808).toFixed(2);
                id_meter.value = valeur;
                id_inche.value = (valeur*39.370).toFixed(2);
                id_cm.value = (valeur/0.01).toFixed();
                id_yard.value = (valeur*1.0936).toFixed(2);
                id_km.value = (valeur/1000).toFixed(5);
                id_mile.value = (valeur*0.00062137).toFixed(5);
            }

            if (source === "id_inche") {
                id_feet.value = (valeur*0.083333).toFixed(3);
                id_meter.value = (valeur/39.370).toFixed(3);
                id_inche.value = valeur;
                id_cm.value = (valeur/0.39370).toFixed(2);
                id_yard.value = (valeur*0.027778).toFixed(3);
                id_km.value = (valeur/39370).toFixed(6);
                id_mile.value = (valeur*0.000015783).toFixed(6);
            }

            if (source === "id_cm") {
                id_feet.value = (valeur*0.032808).toFixed(3);
                id_meter.value = (valeur/100).toFixed(3);
                id_inche.value = (valeur*0.39370).toFixed(2);
                id_cm.value = valeur;
                id_yard.value = (valeur*0.010936).toFixed(3);
                id_km.value = (valeur/100000).toFixed(6);
                id_mile.value = (valeur*0.0000062137).toFixed(6);
            }

            if (source === "id_yard") {
                id_feet.value = (valeur*3).toFixed();
                id_meter.value = (valeur/1.0936).toFixed(2);
                id_inche.value = (valeur*36).toFixed();
                id_cm.value = (valeur/0.010936).toFixed();
                id_yard.value = valeur;
                id_km.value = (valeur/1093.6).toFixed(5);
                id_mile.value = (valeur*0.00056818).toFixed(5);
            }

            if (source === "id_km") {
                id_feet.value = (valeur*3280.8).toFixed();
                id_meter.value = (valeur*1000).toFixed();
                id_inche.value = (valeur*39370).toFixed();
                id_cm.value = (valeur*100000).toFixed();
                id_yard.value = (valeur*1093.6).toFixed();
                id_km.value = valeur;
                id_mile.value = (valeur*0.62137).toFixed(2);
            }

            if (source === "id_mile") {
                id_feet.value = (valeur*5280).toFixed();
                id_meter.value = (valeur/0.00062137).toFixed();
                id_inche.value = (valeur*63360).toFixed();
                id_cm.value = (valeur/0.0000062137).toFixed();
                id_yard.value = (valeur*1760).toFixed();
                id_km.value = (valeur/0.62137).toFixed(2);
                id_mile.value = valeur;
            }
        }

        /* On fait une boucle pour mettre un écouteur d'évènement sur chaque champs */
        for (i = 0; i < convertInput.length; i++) {
            convertInput[i].addEventListener("input", function () {
                multiconvert(this.id, this.value);
            });
        }

        multiconvert("id_feet", 1); // Appel à cette fonction avec 2 paramètres au chargement
    
    </script>

</body>
</html>